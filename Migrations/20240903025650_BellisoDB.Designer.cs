// <auto-generated />
using System;
using Belliso.Models.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BellisoProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240903025650_BellisoDB")]
    partial class BellisoDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Belliso.Models.Entity.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Cart", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UsernameNavigationUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Username");

                    b.HasIndex("ProId");

                    b.HasIndex("UsernameNavigationUsername");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Category", b =>
                {
                    b.Property<int>("CateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateId"));

                    b.Property<string>("CateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CateId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerUsername");

                    b.HasIndex("ManagerId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Customer", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Belliso.Models.Entity.DeliveryAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsernameNavigationUsername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsernameNavigationUsername");

                    b.ToTable("DeliveryAddresses");
                });

            modelBuilder.Entity("Belliso.Models.Entity.ImportProduct", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptId"));

                    b.Property<DateOnly>("DateImport")
                        .HasColumnType("date");

                    b.Property<double>("Payment")
                        .HasColumnType("float");

                    b.Property<string>("PersonChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceiptId");

                    b.ToTable("ImportProducts");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConversationId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("CustomerUsername");

                    b.HasIndex("ManagerId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("OrderDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentConfirm")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsernameNavigationUsername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("UsernameNavigationUsername");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Belliso.Models.Entity.OrderDetail", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderId1");

                    b.HasIndex("ProId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Product", b =>
                {
                    b.Property<string>("ProId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CateId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("ProDes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProPrice")
                        .HasColumnType("float");

                    b.Property<int>("ProQuan")
                        .HasColumnType("int");

                    b.HasKey("ProId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CateId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Belliso.Models.Entity.ProductAttribute", b =>
                {
                    b.Property<string>("ProId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProId");

                    b.HasIndex("ProId1");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("Belliso.Models.Entity.ProductImage", b =>
                {
                    b.Property<string>("ProId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProId");

                    b.HasIndex("ProId1");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Belliso.Models.Entity.ReceiptProduct", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiptId1")
                        .HasColumnType("int");

                    b.HasKey("ReceiptId");

                    b.HasIndex("ProId");

                    b.HasIndex("ReceiptId1");

                    b.ToTable("ReceiptProducts");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Cart", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Product", "Pro")
                        .WithMany()
                        .HasForeignKey("ProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belliso.Models.Entity.Customer", "UsernameNavigation")
                        .WithMany()
                        .HasForeignKey("UsernameNavigationUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pro");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Conversation", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belliso.Models.Entity.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Belliso.Models.Entity.DeliveryAddress", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Customer", "UsernameNavigation")
                        .WithMany("DeliveryAddresses")
                        .HasForeignKey("UsernameNavigationUsername");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Message", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Conversation", null)
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId");

                    b.HasOne("Belliso.Models.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belliso.Models.Entity.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Order", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Manager", "Manager")
                        .WithMany("Orders")
                        .HasForeignKey("ManagerId");

                    b.HasOne("Belliso.Models.Entity.Customer", "UsernameNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("UsernameNavigationUsername");

                    b.Navigation("Manager");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("Belliso.Models.Entity.OrderDetail", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId1");

                    b.HasOne("Belliso.Models.Entity.Product", "Pro")
                        .WithMany()
                        .HasForeignKey("ProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Product", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belliso.Models.Entity.Category", "Cate")
                        .WithMany("Products")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Cate");
                });

            modelBuilder.Entity("Belliso.Models.Entity.ProductAttribute", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Product", "Pro")
                        .WithMany()
                        .HasForeignKey("ProId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("Belliso.Models.Entity.ProductImage", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Product", "Pro")
                        .WithMany()
                        .HasForeignKey("ProId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("Belliso.Models.Entity.ReceiptProduct", b =>
                {
                    b.HasOne("Belliso.Models.Entity.Product", "Pro")
                        .WithMany()
                        .HasForeignKey("ProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Belliso.Models.Entity.ImportProduct", "Receipt")
                        .WithMany()
                        .HasForeignKey("ReceiptId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pro");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Customer", b =>
                {
                    b.Navigation("DeliveryAddresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Belliso.Models.Entity.Manager", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
